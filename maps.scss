$editorBackground: #fff;
$buttonStrokeColor: #000;
$buttonBackgroundColor: lightgray;
$buttonFocusColor: #f60;
$buttonHoverColor: #0af;

// page layout
#worldRoot {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  display: flex;
  flex-direction: rows;
  justify-content: space-between;
  align-content: stretch;

  #mapRoot, #settingsRoot {
    flex-shrink: 1;
    flex-grow: 1;
  }

  #editorControls {
    flex-shrink: 0;
    flex-grow: 0;
  }

  #editor {
    flex-shrink: 0;
    flex-grow: 0;
    width: 14em;
    padding: 0.25em;

    z-index: 1;
    background-color: $editorBackground;
    
    &.hidden {
      width: 0;
    }

    h1 {
      margin-top: 0;
      margin-bottom: 0.5em;
    }
  }
}

// editor tabs
#editorControls {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-content: stretch;

  button {
    z-index: 2;
    font-size: 1.25em;
    background-color: $buttonBackgroundColor;
    border: solid $buttonStrokeColor 1px;
    border-top-left-radius: 0.5em;
    border-bottom-left-radius: 0.5em;
    padding: 0.25em;
    transition: background-color 0.25s, border-right-color 0.25s;

    cursor: pointer;

    svg {
      fill: none;
      stroke: $buttonStrokeColor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
    }

    &.active {
      background-color: $editorBackground;
      border-right-color: $editorBackground;
      flex-shrink: 0;
    }
    &:hover svg {
      stroke: $buttonHoverColor;
    }
    &:focus {
      outline: none;

      svg {
        stroke: $buttonFocusColor;
      }
    }
  }

  .filler {
    flex-grow: 1;
    flex-shrink: 1;
    border-right: solid black 1px;
  }
}

// map scrolling
#mapRoot {
  overflow: hidden;

  canvas {
    pointer-events: none;
    position: absolute;
  }

  .scrollPane {
    overflow: scroll;
    position: absolute;
    touch-action: none;
  }
}

// editor tools
#editor > form {
  & div[role="group"] {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-content: flex-start;

    &.vertical {
      flex-direction: column;

      > p {
        margin-bottom: 0;
      }
    }

    > label {
      min-width: 4em;
    }

    &:not(:first-child) {
      margin-top: 1em;
    }

    &:not(.vertical) > input {
      flex-shrink: 1;
      width: 10em;
      text-align: center;
    }
  }
}

#editor {
  display: flex;
  flex-direction: column;

  & > form {
    flex-grow: 1;
    flex-shrink: 1;
    overflow-y: auto;
  }

  .resizeAnchor {
    height: 8em;
    width: 8em;

    button {
      margin: 0.1em;
      padding: 0;
      flex-grow: 1;
      flex-basis: 0;
      font-size: 1em;
    }

    display: flex;
    flex-direction: column;
    
    & > div {
      display: flex;
      flex-direction: row;
      flex-grow: 1;
      flex-basis: 0;
    }
  }
}

.palleteList {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: stretch;
  align-content: flex-start;

  > * {
    margin: 0.2em; padding: 0.35em 0.5em;
    border: solid black 1px;
    color: black;
    border-radius: 0.2em;
    text-shadow: 0 0 5px white, 0 0 5px white, 0 0 5px white, 0 0 2px white, 0 0 2px white;
    cursor: pointer;

    &.selected {
      border-color: white;
      color: white;
      text-shadow: 0 0 5px black, 0 0 5px black, 0 0 5px black, 0 0 2px black, 0 0 2px black;
      outline: solid black 2px;
    }
  }
}

#undoRedo {
  align-self: center;
  display: flex;
  flex-shrink: 0;

  button {
    margin: 0.25em;
    font-size: 1.5em;
    background-color: $buttonBackgroundColor;
    border: solid $buttonStrokeColor 1px;
    padding: 0.25em;
    transition: background-color 0.25s, border-right-color 0.25s;
    cursor: pointer;

    &.roundLeft {
      border-top-left-radius: 1em;
      border-bottom-left-radius: 1em;
    }
    &.roundRight {
      border-top-right-radius: 1em;
      border-bottom-right-radius: 1em;
    }
    svg {
      fill: none;
      stroke: $buttonStrokeColor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
    }
    &:hover svg {
      stroke: $buttonHoverColor;
    }
    &:focus {
      outline: none;

      svg {
        stroke: $buttonFocusColor;
      }
    }
    &.disabled {
      cursor: not-allowed;
      svg {
        stroke: grey !important;
      }
    }
    &.spinner > svg {
      -webkit-animation:spin 3s linear infinite;
      -moz-animation:spin 3s linear infinite;
      animation:spin 3s linear infinite;
    }
  }
}

#settingsRoot {
  margin: 1em;
  display: flex;
  flex-direction: row;

  justify-content: space-around;
  align-items: flex-start;

  & > * {
    flex-basis: 0;
    flex-grow: 1;
    flex-shrink: 1;
    
    &:not(:first-child) {
      margin-left: 1em;
      padding-left: 1em;
      border-left: solid gray 1px;
    }
  }
}

@-moz-keyframes spin { 100% { -moz-transform: rotate(360deg); } }
@-webkit-keyframes spin { 100% { -webkit-transform: rotate(360deg); } }
@keyframes spin { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }

#setupDownload canvas {
  display: none;
}